<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:oxm="http://www.springframework.org/schema/oxm"
       xsi:schemaLocation="http://www.springframework.org/schema/oxm
         http://www.springframework.org/schema/oxm/spring-oxm.xsd
         http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans.xsd">
         
    <bean id="templateResolver"  class="org.thymeleaf.templateresolver.ServletContextTemplateResolver">
        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".html" />
        <property name="templateMode" value="HTML5" />
        <property name="characterEncoding" value="UTF-8" />
        <!-- Template cache is set to false (default is true). production environment will set to true.        -->
        <property name="cacheable" value="false" />
    </bean>
    <bean id="templateEngine" class="org.thymeleaf.spring4.SpringTemplateEngine">
        <property name="templateResolver" ref="templateResolver" />
        <property name="additionalDialects">
	        <set>
	          <bean class="org.thymeleaf.extras.springsecurity3.dialect.SpringSecurityDialect"/>
	        </set>
	      </property>
    </bean>
    <!-- jasperreport -->
    <!-- <bean id="reportViewResolver" class="org.springframework.web.servlet.view.XmlViewResolver"></bean> -->
    <!--
    - The ContentNegotiatingViewResolver delegates to the InternalResourceViewResolver and BeanNameViewResolver,
    - and uses the requested media type (determined by the path extension) to pick a matching view. 
    - When the media type is 'text/html', it will delegate to the InternalResourceViewResolver's JstlView, 
    - otherwise to the BeanNameViewResolver.
    -->
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="contentNegotiationManager" ref="cnManager"/>
        <property name="viewResolvers">
        	<list>
                <!-- Used here for 'xml' and 'atom' views  -->
                <bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
                    <property name="order" value="1"/>
                </bean>
                <bean class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
                	<property name="characterEncoding" value="UTF-8"/>
                    <property name="templateEngine" ref="templateEngine" />
                    <property name="order" value="2"/>
                    <!-- We need to set exclusions because Content Negotiation tries to resolve from -->
                    <!-- Thymeleaf even if a specific view bean (of a different class) is already    -->
                    <!-- found, which might cause exceptions (e.g. ThymeleafView does not have a     -->
                    <!-- 'marshaller' property).                                                     -->
                    <property name="excludedViewNames" value="*.xml" />
                </bean>
        	</list>
        </property>
    </bean>
	<bean id="objectMapper" class="org.codehaus.jackson.map.ObjectMapper" />
    <!-- Simple strategy: only path extension is taken into account -->
    <bean id="cnManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="favorPathExtension" value="true"/>
        <property name="ignoreAcceptHeader" value="true"/>
        <property name="defaultContentType" value="text/html"/>
        <property name="mediaTypes">
            <map>
                <entry key="html" value="text/html" />
                <entry key="xml" value="application/xml" />
                <entry key="atom" value="application/atom+xml" />
            </map>
        </property>
    </bean>
</beans>
